@page
@model ContosoPizza.Pages.PizzaListModel
@{
    ViewData["Title"] = "Pizza List 🍕";
}
<h1>Pizza List 🍕</h1>

@* asp-validation-summary is used to display validation errors for the entire model *@
@* each form field (input and select elements) and label is bound to the NewPizza property using the asp-for attribute *@
@* asp-validation-for is used to display validation errors for each form field *@
@* @Html.DisplayNameFor method is used to display the display name for the IsGlutenFree property... Razor helper method that's used to display the display name for a property... doing the label this way ensures that the checkbox is selected when the user clicks the label *@
@* submit button is added to the form to post the form data to the server... at runtime, the browser will send the form as an HTTP POST request to the server when the user clicks the submit button *@
<form method="post">
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    <div class="form-group">
        <label asp-for="NewPizza.Name" class="control-label"></label>
        <input asp-for="NewPizza.Name" class="form-control" />
        <span asp-validation-for="NewPizza.Name" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="NewPizza.Size" class="control-label"></label>
        <select asp-for="NewPizza.Size" id="PizzaSize" class="form-control">
            <option value="">-- Select Size --</option>
            <option value="Small">Small</option>
            <option value="Medium">Medium</option>
            <option value="Large">Large</option>
        </select>
        <span asp-validation-for="NewPizza.Size" class="text-danger"></span>
    </div>
    <div class="form-group form-check">
        <label class="form-check-label">
            <input asp-for="NewPizza.IsGlutenFree" class="form-check-input" /> @Html.DisplayNameFor(model => model.NewPizza.IsGlutenFree)
        </label>
    </div>
    <div class="form-group">
        <label asp-for="NewPizza.Price" class="control-label"></label>
        <input asp-for="NewPizza.Price" class="form-control">
        <span asp-validation-for="NewPizza.Price"class="text-danger"></span>
    </div>
    <div class="form-group">
        <input type="submit" value="Create" class="btn btn-primary">
    </div>
</form>

<table class="table mt-5">
    <thead>
        <tr>
            <th scope="col">Name</th>
            <th scope="col">Price</th>
            <th scope="col">Size</th>
            <th scope="col">Gluten Free</th>
            <th scope="col">Delete</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var pizza in Model.PizzaList)
        {
            <tr>
                <td>@pizza.Name</td>
                <td>@($"{pizza.Price:C}")</td>
                <td>@pizza.Size</td>
                <td>@(pizza.IsGlutenFree ? "✔️" : string.Empty)</td>
                <td>
                    @* asp-page-handler indicates that the form should be submitted to the Delete handler in the code-behind file *@
                    @* asp-route-id indicates that the Id property of the Pizza object should be passed to the Delete handler *@
                    <form method="post" asp-page-handler="Delete" asp-route-id="@pizza.Id">
                        <button class="btn btn-danger">Delete</button>
                    </form>
                </td>
            </tr>
        }
    </tbody>
</table>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
}